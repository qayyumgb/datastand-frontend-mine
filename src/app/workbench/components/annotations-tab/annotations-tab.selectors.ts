import { createSelector } from '@ngrx/store';

import {
  hasBoundaries,
  hasLabelEntities,
  hasPendingSpans,
  hasTokenLayers,
  isAnnotationsTabSelected,
  isSpansLoaded,
  isSpansLoading,
  isTextLoaded,
  isTextLoading,
  isTokenLayersLoaded,
  isTokenLayersLoading,
  selectAllSpans,
  selectBody,
  selectCurrentBoundaries,
  selectCurrentLabel,
  selectCurrentLabelId,
  selectCurrentLabelName,
  selectElementsForDisplay,
  selectLabelEntities,
  selectLabelEntitiesTotal,
  selectSpansForDisplay,
} from '@workbench/store/selectors';

export const selectAnnotationsTabModel = createSelector(
  isAnnotationsTabSelected,
  isSpansLoaded,
  isSpansLoading,
  isTextLoaded,
  isTextLoading,
  isTokenLayersLoaded,
  isTokenLayersLoading,
  hasBoundaries,
  hasLabelEntities,
  hasPendingSpans,
  hasTokenLayers,
  selectCurrentBoundaries,
  selectCurrentLabel,
  selectCurrentLabelId,
  selectCurrentLabelName,
  selectLabelEntities,
  selectLabelEntitiesTotal,
  selectAllSpans,
  selectSpansForDisplay,
  selectBody,
  selectElementsForDisplay,
  (
    isAnnotationsTabSelected,
    isSpansLoaded,
    isSpansLoading,
    isTextLoaded,
    isTextLoading,
    isTokenLayersLoaded,
    isTokenLayersLoading,
    hasBoundaries,
    hasLabelEntities,
    hasPendingSpans,
    hasTokenLayers,
    boundaries,
    currentLabel,
    currentLabelId,
    currentLabelName,
    labelEntities,
    labelEntitiesTotal,
    currentSpans,
    spansForDisplay,
    text,
    elementsForDisplay
  ) => ({
    hasBoundaries,
    isSpansLoaded,
    isSpansLoading,
    isTextLoaded,
    isTextLoading,
    isTokenLayersLoaded,
    isTokenLayersLoading,
    hasLabelEntities,
    hasPendingSpans,
    hasTokenLayers,
    boundaries,
    currentLabel,
    currentLabelId,
    currentLabelName,
    labelEntities,
    labelEntitiesTotal,
    currentSpans,
    spansForDisplay,
    text,
    elementsForDisplay,
    // Derived
    canOpenClearAllAnnotationsDialog: isAnnotationsTabSelected,
  })
);
